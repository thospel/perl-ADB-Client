#!/usr/bin/perl -w
# Very simple program to manually tak to an ADB server
# useful to better understand the protocol
use strict;
use warnings;

our $VERSION = "1.000";

use FindBin qw($Script);
our $Bin;

# If the program runs as /foobar/bin/program, find libraries in /foobar/lib
BEGIN {
    # Even on windows FindBin uses / in the reported path
    $Bin = $FindBin::Bin;
    $Bin =~ s{/+\z}{};
    $Bin =~
        ($^O eq "MSWin32" ?
         qr{^((?:[A-Z]:)?(?:/[a-zA-Z0-9_:.~ -]+)*)/[a-zA-Z0-9_.-]+/*\z} :
         qr{^((?:/[a-zA-Z0-9_:.-]+)*)/[a-zA-Z0-9_.-]+/*\z}) ||
         die "Could not parse bin directory '$Bin'";
    # Use untainted version of lib
    require lib;
    # Support a simple --blib option for pre-install testing
    "lib"->import(@ARGV && $ARGV[0] eq "--blib" ? shift && "$1/blib/lib" : "$1/lib");
}

use Getopt::Long 2.24 qw(:config bundling);

use ADB::Client;

die "Could not parse your command line. Try $0 -h\n" unless
    GetOptions("host|h|H=s"	=> \my $host,
               "port|p|P=s"	=> \my $port,
           );
die "$Script doesn't take arguments\n" if @ARGV;

my (undef, undef, $devices, $tracker) =
    ADB::Client->new(host => $host, port => $port)->devices_track;
while (1) {
    print $devices, "-"x20, "\n";
    $devices = ($tracker->wait)[2];
}
